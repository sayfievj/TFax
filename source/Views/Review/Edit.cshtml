@model ReviewViewModel

@{
    ViewBag.Title = "Submit a review";
    Layout = "~/Views/Shared/_Review.cshtml";

    var member = (MemberMaster)ViewBag.Member;
    var profile = member.Profile_Master.ElementAt(0);

}


@if (TempData["ReviewStatus"] != null)
{
    <p class="text-success">@TempData["ReviewStatus"]</p>
}

<div class="col-2 cop bpush avatar">
    <a href="@member.Cover_File.ToBase64String()">
        <img src="@member.Cover_File.ToBase64ImageString(135, 135)" alt="">
    </a>
    <p>
        <i class="@member.GetColor()"></i>
        <a href="@Url.Action("Details", "Account", new { id = member.Id })">@member.GetFullName()</a>
    </p>
</div>

<div class="col-10 cop bpush">

    @using (Html.BeginForm("Edit", "Review", FormMethod.Post, new { role = "form", id = "submit-tutor-review", @class = "form-blue" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="col-12 cop">

            <div class="form-group tar cop form-grid">
                <div class="col-2"><label>Name</label></div>
                <div class="col-10 cop">
                    <p class="text-left form-control-static">@member.GetFullName()</p>
                    <div class="clearfix"></div>
                </div>
                <div class="col-2"><label>Profile link</label></div>
                <div class="col-10">
                    @foreach (Profile_Links link in profile.Profile_Links)
                    {
                        <p class="text-left form-control-static"><a href="@link.LinkURL">@link.LinkTitle</a></p>
                    }
                    <div class="clearfix"></div>
                </div>

                <div class="col-2"><label for="tutor-additional">additional</label></div>
                <div class="col-5 cop"><input type="text" id="tutor-additional" class="form-control"></div>
                <div class="col-2 cop">
                    <button class="btn btn-blue btn-addit" href="#">Add</button>
                    <div class="clearfix"></div>
                </div>

            </div>

            <div class="form-group col-7 tar cop form-grid">

                <div class="col-6"><label>location</label></div>
                <div class="col-6 cop">
                    <p class="text-left form-control-static">@member.GetLocation()</p>
                    <div class="clearfix"></div>
                </div>

                <div class="col-6"><label>e-mail</label></div>
                <div class="col-6 cop">
                    <p class="text-left form-control-static">@member.Email_Login</p>
                    <div class="clearfix"></div>
                </div>

                <div class="col-6">@Html.LabelFor(model => model.ReviewTitle, "Title", new { @class = "control-label" })</div>
                <div class="col-6 cop">
                    @Html.TextBoxFor(model => model.ReviewTitle, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ReviewTitle)
                    <div class="clearfix"></div>
                </div>

                <div class="col-6"><label>Subject being reviewed</label></div>
                <div class="col-6 cop">
                    @Html.DropDownList("Subject", null, "Please select", new { @class = "selectbox2" })
                    @Html.ValidationMessageFor(model => model.Subject)
                    <div class="clearfix"></div>
                </div>

                <div class="col-6">@Html.LabelFor(model => model.Subject_Detail, "Detail", new { @class = "control-label" })</div>
                <div class="col-6 cop">
                    @Html.TextAreaFor(model => model.Subject_Detail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Subject_Detail)
                    <div class="clearfix"></div>
                </div>

                <div class="col-6"><label for="student-hours">You were tutored</label></div>
                <div class="col-4 cop"><input type="text" class="form-control" id="student-hours" placeholder="hours"></div>
                <div class="col-2 cop">
                    <label for="student-hours">hours</label>
                    <div class="clearfix"></div>
                </div>

            </div>

            <div class="form-group col-5 tar cop form-grid">
                <div class="col-12"><label>Please give your score for</label></div>

                <div class="col-8"><label>Subject knowledge</label></div>
                <div class="col-4 cop">
                    @Html.DropDownListFor(model => model.Score_SubjectKnowledge, Html.GetListItems(), new { @class = "selectbox2" })
                    @Html.ValidationMessageFor(model => model.Score_SubjectKnowledge)
                    <div class="clearfix"></div>
                </div>

                <div class="col-8"><label>Passion</label></div>
                <div class="col-4 cop">
                    @Html.DropDownListFor(model => model.Score_Passion, Html.GetListItems(), new { @class = "selectbox2" })
                    @Html.ValidationMessageFor(model => model.Score_Passion)
                    <div class="clearfix"></div>
                </div>

                <div class="col-8"><label for="tutor-communication">Communication</label></div>
                <div class="col-4 cop">
                    @Html.DropDownListFor(model => model.Communication, Html.GetListItems(), new { @class = "selectbox2" })
                    @Html.ValidationMessageFor(model => model.Communication)
                    <div class="clearfix"></div>

                </div>

                <div class="col-8"><label for="tutor-overall">tutor-overall</label></div>
                <div class="col-4 cop">
                    @Html.DropDownListFor(model => model.Score_Overall, Html.GetListItems(), new { @class = "selectbox2" })
                    @Html.ValidationMessageFor(model => model.Score_Overall)
                    <div class="clearfix"></div>
                </div>

            </div>

            <div class="clearfix"></div>

            <div class="hr splitter-d bpush"></div>

            <p class="stand">Location: What was your overall experience with the tutor?</p>
            <p class="bqt2">
                @Html.TextAreaFor(model => model.ReviewSummary, new { @class = "form-control limit-w" })
                @Html.ValidationMessageFor(model => model.ReviewSummary)
            </p>

            <p class="stand">Subject Knowledge:</p>
            <p class="bqt2">
                @Html.TextAreaFor(model => model.Description_SubjectKnowledge, new { @class = "form-control limit-w" })
                @Html.ValidationMessageFor(model => model.Description_SubjectKnowledge)
            </p>

            <p class="stand">Helpfulness</p>
            <p class="bqt2">
                @Html.TextAreaFor(model => model.Description_Helpfullness, new { @class = "form-control limit-w" })
                @Html.ValidationMessageFor(model => model.Description_Helpfullness)

            </p>

            <p class="stand">Passion: Describe Tutors overall attitude in teaching this subject.</p>
            <p class="bqt2">
                @Html.TextAreaFor(model => model.Description_Passion, new { @class = "form-control limit-w" })
                @Html.ValidationMessageFor(model => model.Description_Passion)

            </p>

            <p class="stand">Communication</p>
            <p class="bqt2">
                @Html.TextArea("Description_Communication", new { @class = "form-control limit-w" })
            </p>

            <p class="bqt2 spaced2 tac"><button type="submit" class="btn btn-blue btn-olg">Submit this Review</button></p>

        </div>
        <div class="clearfix"></div>

    }

</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

@section scripts
    {
    @Scripts.Render("~/bundles/jqueryval")
}
