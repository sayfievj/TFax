@model MemberViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MemberMaster</h4>
        <hr />
        @Html.ValidationSummary(true)

        @Html.GetId()

        <div class="form-group">
            @Html.LabelFor(model => model.Email_Login, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email_Login)
                @Html.ValidationMessageFor(model => model.Email_Login)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address)
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street)
                @Html.ValidationMessageFor(model => model.Street)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CityId", String.Empty)
                @Html.ValidationMessageFor(model => model.CityId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StateId", String.Empty)
                @Html.ValidationMessageFor(model => model.StateId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CountryId", String.Empty)
                @Html.ValidationMessageFor(model => model.CountryId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberClass, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberClass)
                @Html.ValidationMessageFor(model => model.MemberClass)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberRoleId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MemberRoleId", String.Empty)
                @Html.ValidationMessageFor(model => model.MemberRoleId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActivated, "Is Activate?", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsActivated)
                @Html.ValidationMessageFor(model => model.IsActivated)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
