@model ReviewViewModel

@{
    ViewBag.Title = "Edit a review";
    var profile = Model.Member.Profile_Master.FirstOrDefault();
    Layout = "~/Views/Shared/_Account.cshtml";
}

@if (TempData["ReviewStatus"] != null)
{
    <p class="text-success">@TempData["ReviewStatus"]</p>
}
else
{

   using (Html.BeginForm("Edit", "Review", FormMethod.Post, new { role = "form", @class = "form-horizontal form-grey spaced" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="col-2 cop bpush avatar">
            <a href="@Model.Member.Cover_File.ToBase64String()">
                <img src="@Model.Member.Cover_File.ToBase64ImageString(135, 135)" style="width: 100%;" alt="">
            </a>
            <p>
                <i class="@Model.Member.GetColor()"></i>
                <a href="@Url.Action("Details", "Account", new { id = Model.Member.Id })">@Model.Member.GetFullName()</a>
            </p>
        </div>

        <div class="col-10 cop bpush">

            @if (profile != null && profile.Profile_Links.Any())
            {
                <div class="col-2">
                    <p class="b">Profile links:</p>
                </div>
                <div class="col-10">
                    @foreach (var link in profile.Profile_Links)
                    {
                        <p><a href="@link.LinkURL">@link.LinkTitle</a></p>
                    }
                </div>
                <div class="clearfix bpush"></div>
            }

            <div class="col-6">
                <p><span class="b">Location: </span> <span>@Model.Member.GetLocation()</span></p>
            </div>

            <div class="col-6">
                <p><span class="b">E-mail: </span> <a href="mailto:@Model.Member.Email_Login">@Model.Member.Email_Login</a></p>
            </div>
            <div class="clearfix bpush"></div>

            <div class="col-2">
                <p class="b">
                    @Html.LabelFor(model => model.Review.ReviewTitle, "Title:", new { @class = "control-label" })
                </p>
            </div>
            <div class="col-10">
                @Html.TextBoxFor(model => model.Review.ReviewTitle, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Review.ReviewTitle)
            </div>

            <div class="clearfix bpush"></div>

            <div class="col-2">
                <p class="b">
                    @Html.LabelFor(model => model.Review.Subject, "Subject:", new { @class = "control-label" })
                </p>
            </div>
            <div class="col-10">
                @Html.DropDownListFor(model => model.Review.Subject, new SelectListItem[] { }, String.Empty, new { @class = "form-control selectBox2 select2-choice" })
                @Html.ValidationMessageFor(model => model.Review.Subject)
            </div>

            <div class="clearfix bpush"></div>
            <div class="col-2">
                <p class="b">
                    @Html.LabelFor(model => model.Review.Subject_Detail, "Detail:", new { @class = "control-label" })
                </p>
            </div>
            <div class="col-10">
                @Html.TextAreaFor(model => model.Review.Subject_Detail, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Review.Subject_Detail)
            </div>

            <div class="clearfix bpush"></div>
            <div class="col-4">
                <p class="b">Please give your score for </p>
            </div>
            <div class="col-8">

                <div class="col-6">
                    @Html.LabelFor(model => model.Review.Score_SubjectKnowledge, "Knowledge:", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Review.Score_SubjectKnowledge, new { @class = "form-control aSpinEdit" })
                    @Html.ValidationMessageFor(model => model.Review.Score_SubjectKnowledge)
                </div>

                <div class="col-6">
                    @Html.LabelFor(model => model.Review.Score_Helpfullness, "Helpfulness:", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Review.Score_Helpfullness, new { @class = "form-control aSpinEdit" })
                    @Html.ValidationMessageFor(model => model.Review.Score_Helpfullness)
                </div>

                <div class="col-6">
                    @Html.LabelFor(model => model.Review.Score_Passion, "Passion:", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Review.Score_Passion, new { @class = "form-control aSpinEdit" })
                    @Html.ValidationMessageFor(model => model.Review.Score_Passion)
                </div>

                <div class="col-6">
                    @Html.LabelFor(model => model.Review.Communication, "Communication:", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Review.Communication, new { @class = "form-control aSpinEdit" })
                    @Html.ValidationMessageFor(model => model.Review.Communication)
                </div>
            </div>

            <div class="clearfix"></div>

            <div class="btns-a bpush">


                <table class="table">

                    <tr>

                        <td colspan="2">

                            <div class="form-group">
                                @Html.LabelFor(model => model.Review.ReviewSummary, "Location: What was your overall experience with the tutor?", new { @class = "col-4 control-label tar" })
                                <div class="col-6">
                                    @Html.TextAreaFor(model => model.Review.ReviewSummary, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Review.ReviewSummary)
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Review.Description_SubjectKnowledge, "Subject Knowledge:", new { @class = "col-4 control-label" })
                                <div class="col-6">
                                    @Html.TextAreaFor(model => model.Review.Description_SubjectKnowledge, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Review.Description_SubjectKnowledge)
                                </div>
                            </div>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Review.Description_Helpfullness, "Helpfulness:", new { @class = "col-4 control-label tar" })
                                <div class="col-6">
                                    @Html.TextAreaFor(model => model.Review.Description_Helpfullness, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Review.Description_Helpfullness)
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Review.Description_Passion, "Passion: Describe Tutors overall attitude in teaching this subject.", new { @class = "col-4 control-label tar" })
                                <div class="col-6">
                                    @Html.TextAreaFor(model => model.Review.Description_Passion, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Review.Description_Passion)
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>
                <div class="tac">
                    <button class="btn btn-blue btn-wide" type="submit">Save</button>
                </div>


            </div>

            <div class="clearfix"></div>

        </div><!-- end col-10 -->
    }


    @section scripts
    {
        @Scripts.Render("~/bundles/jqueryval")
        <link href="~/Scripts/bootstrap-spinedit/css/bootstrap-spinedit.css" rel="stylesheet" />
        <script src="~/Scripts/bootstrap-spinedit/js/bootstrap-spinedit.js"></script>
        <link href="~/Scripts/select2/select2-bootstrap.css" rel="stylesheet" />
        <link href="~/Scripts/select2/select2.css" rel="stylesheet" />
        <script src="~/Scripts/select2/select2.min.js"></script>
        <script type="text/javascript">

            $('select.select2-choice').select2({
                placeholder: "Select a Subject",
                allowClear: true,
                width: 'resolve',
                dropdownCssClass: 'bigdrop'
            });

            $('input.aSpinEdit').spinedit({
                minimum: 0,
                maximum: 10,
                step: 1,
                value: 0
            });

        </script>
    }
}